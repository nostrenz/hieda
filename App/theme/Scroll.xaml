<!--
// Hieda default theme
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					mc:Ignorable="d"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:Element="clr-namespace:Hieda.View.Element"
					>

	<!-- Theme colors -->
	<Color x:Key="Color_White">#ffffff</Color>
	<Color x:Key="Color_Green">#52AF52</Color>
	<Color x:Key="Color_LightGreen">#91EE91</Color>
	<Color x:Key="Color_LightGray">#F1F1F1</Color>
	<Color x:Key="Color_DarkGreen">#469546</Color>

	<!-- Theme brushes -->
	<SolidColorBrush x:Key="Brush_White" Color="{StaticResource Color_White}"></SolidColorBrush>
	<SolidColorBrush x:Key="Brush_Green" Color="{StaticResource Color_Green}"></SolidColorBrush>
	<SolidColorBrush x:Key="Brush_LightGreen" Color="{StaticResource Color_LightGreen}"></SolidColorBrush>
	<SolidColorBrush x:Key="Brush_LightGray" Color="{StaticResource Color_LightGray}"></SolidColorBrush>
	<SolidColorBrush x:Key="Brush_DarkGreen" Color="{StaticResource Color_DarkGreen}"></SolidColorBrush>

	<!-- Static/Dynamic Ressources -->
	<SolidColorBrush x:Key="Collection_BackgroundColor" Color="{StaticResource Color_Green}"></SolidColorBrush>
	<SolidColorBrush x:Key="Collection_ItemslistColor" Color="#FFFFFF"></SolidColorBrush>
	<SolidColorBrush x:Key="Collection_TextColor" Color="#000"></SolidColorBrush>
	<SolidColorBrush x:Key="Collection_BorderColor" Color="{StaticResource Color_Green}"></SolidColorBrush>
	<SolidColorBrush x:Key="TextColor_NothingMsg" Color="{StaticResource Color_Green}"></SolidColorBrush>
	<SolidColorBrush x:Key="Tile_BorderColor" Color="{StaticResource Color_Green}"></SolidColorBrush>
	<SolidColorBrush x:Key="WindowTitleColor" Color="White"></SolidColorBrush>
	<SolidColorBrush x:Key="HeaderTextColor" Color="White"></SolidColorBrush>
	<SolidColorBrush x:Key="Window_BackgroundColor" Color="{StaticResource Color_White}"></SolidColorBrush>

	<Style TargetType="Label">
		<Setter Property="Foreground" Value="#000"/>
	</Style>

	<!-- Images -->
	<BitmapImage x:Key="Img_Glass" UriSource="/theme/Scroll/glass.png" />
	<BitmapImage x:Key="Img_DelGlass" UriSource="/theme/Scroll/del.png" />
	<BitmapImage x:Key="Img_Refresh" UriSource="/theme/Scroll/refresh.png" />
	<BitmapImage x:Key="Img_Back" UriSource="/theme/Scroll/back.png" />
	<BitmapImage x:Key="Img_Add" UriSource="/theme/Scroll/plus.png" />

	<!-- Active -->
	<Color x:Key="Base">#FFffffff</Color>
	<Color x:Key="AlternateBase">#FF2E2E2E</Color>
	<Color x:Key="Window">#FFffffff</Color>
	<Color x:Key="Text">#FF000000</Color>
	<Color x:Key="BrightText">#FF252525</Color>
	<Color x:Key="Button">#FF52AF52</Color>
	<Color x:Key="Border">#FF52AF52</Color>
	<Color x:Key="Light">#FF616161</Color>
	<Color x:Key="Midlight">#FF3B3B3B</Color>
	<Color x:Key="Mid">#FF2D2D2D</Color>
	<Color x:Key="Dark">#FF252525</Color>
	<Color x:Key="Shadow">#FF000000</Color>
	<!-- Disabled -->
	<Color x:Key="ButtonDisabled">#FF505050</Color>
	<Color x:Key="TextDisabled">#FF808080</Color>
	<Color x:Key="fSelectedToolButtonColor">#FFAFAFAF</Color>
	<Color x:Key="fPanelFocusRectColor">#FF828282</Color>

	<Color x:Key="baseGradientStartColor">#FFffffff</Color>
	<Color x:Key="baseGradientStopColor">#FFe0e5e6</Color>
	<Color x:Key="buttonPressedGradientStartColor">#FF228B22</Color>
	<Color x:Key="buttonPressedGradientStopColor">#FF228B22</Color>
	<Color x:Key="buttonDisabledGradientStartColor">#FFffffff</Color>
	<Color x:Key="buttonDisabledGradientStopColor">#FFe0e5e6</Color>
	<Color x:Key="highlightedBaseGradientStartColor">#FF656769</Color>
	<Color x:Key="highlightedBaseGradientStopColor">#FF5D5F61</Color>
	<Color x:Key="checkBoxGradientStartColor">#FF2E3134</Color>
	<Color x:Key="checkBoxGradientStopColor">#FF38424B</Color>
	<Color x:Key="checkBoxHoverTopLeft1">#FF52AF52</Color>
	<Color x:Key="checkBoxHoverBottomRight1">#FF52AF52</Color>
	<Color x:Key="checkBoxHoverTopLeft2">#FF52AF52</Color>
	<Color x:Key="checkBoxHoverBottomRight2">#FF52AF52</Color>
	<Color x:Key="editBoxBorder">#FF363636</Color>
	<Color x:Key="editBoxFocus1">#FF607F9C</Color>
	<Color x:Key="editBoxFocus2">#FF52718E</Color>
	<Color x:Key="scrollbarStartColor">#FFffffff</Color>
	<Color x:Key="scrollbarStopColor">#FFe0e5e6</Color>
	<Color x:Key="scrollbarPressedStopColor">#FFC0C0C0</Color>
	<Color x:Key="listboxItemSelected">#FF52AF52</Color>
	<Color x:Key="listboxItemDisabledSelected">#FF567594</Color>
	<Color x:Key="tabItemStopColor">#FF3F3F3F</Color>
	<Color x:Key="tabItemBorderStopColor">#FF4B5257</Color>
	<Color x:Key="tooltips">#FFFFFFDC</Color>

	<Color x:Key="ActiveHover1">#FF52AF52</Color>
	<Color x:Key="ActiveHover2">#FF52AF52</Color>
	<Color x:Key="ActiveNoHover">#FF324577</Color>
	<Color x:Key="InactiveHover">#FF838383</Color>
	<Color x:Key="InactiveNoHover">#FF5E5E5E</Color>

	<!-- Brush -->
	<SolidColorBrush x:Key="BaseBrush" Color="{StaticResource Base}" />
	<SolidColorBrush x:Key="WindowBrush" Color="{StaticResource Window}" />
	<SolidColorBrush x:Key="TextBrush" Color="{StaticResource Text}" />
	<SolidColorBrush x:Key="TextDisabledBrush" Color="{StaticResource TextDisabled}" />
	<SolidColorBrush x:Key="ButtonColorBrush" Color="{StaticResource Button}" />
	<SolidColorBrush x:Key="BorderBrush" Color="{StaticResource Color_Green}" />
	<SolidColorBrush x:Key="LightBrush" Color="{StaticResource Light}" />
	<SolidColorBrush x:Key="DarkBrush" Color="{StaticResource Dark}" />
	<SolidColorBrush x:Key="ButtonDisabledSolidBrush" Color="{StaticResource ButtonDisabled}" />

	<SolidColorBrush x:Key="ActiveHoverBrush1" Color="{StaticResource ActiveHover1}" />
	<SolidColorBrush x:Key="ActiveHoverBrush2" Color="{StaticResource ActiveHover2}" />
	<SolidColorBrush x:Key="ActiveNoHoverBrush" Color="{StaticResource ActiveNoHover}" />
	<SolidColorBrush x:Key="InactiveNoHoverBrush" Color="{StaticResource InactiveNoHover}" />
	<SolidColorBrush x:Key="baseGradientStopColorBrush" Color="{StaticResource baseGradientStopColor}" />
	<SolidColorBrush x:Key="buttonPressedGradientStartColorBrush" Color="{StaticResource buttonPressedGradientStartColor}" />
	<SolidColorBrush x:Key="checkBoxHoverTopLeft1Brush" Color="{StaticResource checkBoxHoverTopLeft1}" />
	<SolidColorBrush x:Key="checkBoxHoverBottomRight1Brush" Color="{StaticResource checkBoxHoverBottomRight1}" />
	<SolidColorBrush x:Key="checkBoxHoverTopLeft2Brush" Color="{StaticResource checkBoxHoverTopLeft2}" />
	<SolidColorBrush x:Key="checkBoxHoverBottomRight2Brush" Color="{StaticResource checkBoxHoverBottomRight2}" />
	<SolidColorBrush x:Key="radioBoxBorder1Brush" Color="{StaticResource buttonDisabledGradientStopColor}" />
	<SolidColorBrush x:Key="radioBoxBorder2Brush" Color="{StaticResource Base}" />
	<SolidColorBrush x:Key="editBoxBorderBrush" Color="{StaticResource Color_Green}" />
	<SolidColorBrush x:Key="editBoxFocus1Brush" Color="{StaticResource Color_Green}" />
	<SolidColorBrush x:Key="editBoxFocus2Brush" Color="{StaticResource Color_Green}" />
	<SolidColorBrush x:Key="scrollbarStartColorBrush" Color="{StaticResource scrollbarStartColor}" />
	<SolidColorBrush x:Key="scrollbarStopColorBrush" Color="{StaticResource scrollbarStopColor}" />
	<SolidColorBrush x:Key="listboxItemSelectedBrush" Color="{StaticResource listboxItemSelected}" />
	<SolidColorBrush x:Key="listboxItemDisabledSelectedBrush" Color="{StaticResource listboxItemDisabledSelected}" />
	<SolidColorBrush x:Key="tooltipsBrush" Color="{StaticResource tooltips}" />
	<SolidColorBrush x:Key="ButtonBrush" Color="{StaticResource Color_White}" />
	<SolidColorBrush x:Key="ButtonHoveredBrush" Color="{StaticResource Color_DarkGreen}" />
	<SolidColorBrush x:Key="ButtonPressedBrush" Color="{StaticResource Color_DarkGreen}" />
	<SolidColorBrush x:Key="ButtonDisabledBrush" Color="{StaticResource Color_LightGray}" />

	<LinearGradientBrush x:Key="CheckBoxHoverBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource checkBoxGradientStartColor}" Offset="0.0" />
		<GradientStop Color="{StaticResource checkBoxGradientStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ScrollbarBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource scrollbarStartColor}" Offset="0.0" />
		<GradientStop Color="{StaticResource scrollbarStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ScrollbarPressedBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource Button}" Offset="0.0" />
		<GradientStop Color="{StaticResource scrollbarPressedStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="TabItemUnselectedBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource Window}" Offset="0.0" />
		<GradientStop Color="{StaticResource tabItemStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="TabItemTopBorderBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientStop Color="{StaticResource Window}" Offset="0.0" />
		<GradientStop Color="{StaticResource tabItemBorderStopColor}" Offset="1.0" />
	</LinearGradientBrush>

	<ImageBrush x:Key="ProgressBarBrush" ViewportUnits="Absolute" Viewport="0,0,20,14" TileMode="Tile" Stretch="Uniform" ImageSource="/theme/Scroll/progress.png" />
	<DropShadowBitmapEffect x:Key="DropDownShadow" Color="{StaticResource Base}" Direction="315" ShadowDepth="4" Softness="0.15" Opacity="0.35" />

	<ScaleTransform x:Key="FontStretchExpanded" ScaleX="1.2" />

	<!-- All controls -->
	<Style TargetType="Control" x:Key="CommonStyle">
		<Setter Property="Background" Value="{StaticResource Brush_White}" />
		<Setter Property="Foreground" Value="#000000" />
		<Setter Property="FontFamily" Value="Ubuntu" />
		<Setter Property="FontSize" Value="11" />
		<Setter Property="FontWeight" Value="Regular" />
		<Setter Property="FontStretch" Value="Expanded" />
		<Setter Property="FontStyle" Value="Normal" />
	</Style>

	<!-- Separator -->
	<!--<Style TargetType="{x:Type Separator}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Height" Value="1" />
		<Setter Property="Margin" Value="2,0,2,0" />
		<Setter Property="Background" Value="{StaticResource editBoxBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border Background="{x:Null}" BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding Height}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>-->

	<!-- Button -->
	<ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="Grid">
			<Border x:Name="BorderAndBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" />
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
			<Grid x:Name="MouseOverGrid" Opacity="0">
				<Border BorderThickness="0,1,0,1" Margin="1" BorderBrush="{StaticResource ActiveHoverBrush1}" CornerRadius="3" />
				<Border BorderThickness="0,1,0,1" Margin="2" BorderBrush="{StaticResource ActiveHoverBrush2}" CornerRadius="3" />
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{StaticResource ButtonPressedBrush}" />
				<Setter Property="Foreground" Value="{StaticResource Brush_White}" />
				<Setter Property="Padding" Value="7,1,5,-1" />
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="0" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource ButtonHoveredBrush}" />
				<Setter Property="Foreground" Value="{StaticResource Brush_White}" />
				<Setter Property="Padding" Value="7,1,5,-1" />
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="0" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{StaticResource ButtonDisabledBrush}" />
				<Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}" />
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="0" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type Button}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
		<Setter Property="Background" Value="{StaticResource ButtonBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="25" />
		<Setter Property="Padding" Value="6,0,6,0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>

	<!-- CheckBox -->
	<ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
		<BulletDecorator x:Name="bulletDecorator" Background="Transparent">
			<BulletDecorator.Bullet>
				<Grid x:Name="Grid">
					<Border x:Name="BorderAndBackground" Width="13" Height="13" BorderThickness="1" BorderBrush="{StaticResource Brush_White}" Background="{StaticResource Brush_Green}" CornerRadius="1">
						<Path x:Name="CheckMark" RenderOptions.EdgeMode="Aliased" Width="11" Height="11" SnapsToDevicePixels="False" StrokeThickness="2" Stroke="{StaticResource Brush_White}" Data="M 0 5 L 4 9 M 4 8 L 12 0">
							<Path.Clip>
								<RectangleGeometry Rect="1,1,9,9" />
							</Path.Clip>
						</Path>
					</Border>
					<Grid x:Name="MouseOverGrid" Opacity="0">
						<Border BorderThickness="1,1,0,0" Margin="1" BorderBrush="{StaticResource checkBoxHoverTopLeft1Brush}" CornerRadius="0" />
						<Border BorderThickness="1,1,0,0" Margin="2" BorderBrush="{StaticResource checkBoxHoverTopLeft2Brush}" CornerRadius="0" />
						<Border BorderThickness="0,0,1,1" Margin="1" BorderBrush="{StaticResource checkBoxHoverBottomRight1Brush}" CornerRadius="0" />
						<Border BorderThickness="0,0,1,1" Margin="2" BorderBrush="{StaticResource checkBoxHoverBottomRight2Brush}" CornerRadius="0" />
					</Grid>
				</Grid>
			</BulletDecorator.Bullet>
			<ContentPresenter Margin="5,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
		</BulletDecorator>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource Brush_White}" />
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsChecked" Value="False">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="{x:Null}">
				<Setter TargetName="CheckMark" Property="Data" Value="M 0 11 L 11 0" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}" />
				<Setter TargetName="CheckMark" Property="Stroke" Value="{StaticResource TextDisabledBrush}" />
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="0" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource CheckBoxTemplate}" />
		<Setter Property="BorderBrush" Value="{StaticResource DarkBrush}" />
		<Setter Property="Background" Value="{StaticResource BorderBrush}" />
		<Setter Property="Height" Value="13" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>

	<!-- RadioButton -->
	<ControlTemplate x:Key="RadioButtonTemplate" TargetType="{x:Type RadioButton}">
		<BulletDecorator x:Name="bulletDecorator" Background="Transparent">
			<BulletDecorator.Bullet>
				<Grid x:Name="Grid" Width="13" Height="13">
					<Ellipse x:Name="Background1" Height="13" Width="13" Fill="{StaticResource Brush_Green}" Stroke="{StaticResource Brush_White}" StrokeThickness="1" />
					<Ellipse x:Name="Background2" Height="11" Width="11" Fill="{StaticResource Brush_White}" Stroke="{StaticResource Brush_Green}" StrokeThickness="1" />
					<Ellipse x:Name="MouseOver" Height="11" Width="11" Visibility="Collapsed" Fill="#A7F9A7" Stroke="{StaticResource Brush_Green}" StrokeThickness="1" />
					<Ellipse x:Name="CheckIcon" Height="7" Width="7" Fill="{StaticResource Brush_Green}" />
				</Grid>
			</BulletDecorator.Bullet>
			<ContentPresenter Margin="7,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
		</BulletDecorator>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="Background2" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="MouseOver" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsChecked" Value="False">
				<Setter TargetName="CheckIcon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="Gray" />
				<Setter TargetName="Background2" Property="Fill" Value="LightGray" />
				<Setter TargetName="CheckIcon" Property="Fill" Value="Gray" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource RadioButtonTemplate}" />
		<Setter Property="Height" Value="13" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>

	<!-- TextBox -->
	<ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
		<Grid x:Name="Grid">
			
			<Border x:Name="BorderAndBackground" Margin="1" Background="{TemplateBinding Background}" BorderBrush="{StaticResource editBoxBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			<Grid x:Name="FocusGrid" Opacity="0">
				<Border BorderBrush="{StaticResource editBoxFocus1Brush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
				<Border Margin="1" BorderBrush="{StaticResource editBoxFocus2Brush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			</Grid>
			<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Margin="2" />
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter TargetName="FocusGrid" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}" />
				<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource WindowBrush}" />
				<Setter TargetName="BorderAndBackground" Property="BorderBrush" Value="{StaticResource radioBoxBorder1Brush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource TextBoxTemplate}" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="AllowDrop" Value="True" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="Background" Value="{StaticResource BaseBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="20" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="CaretBrush" Value="{StaticResource TextBrush}" />
	</Style>

	<!-- ListBox -->
	<Style x:Key="MayaScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />
						<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" />
						<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource MayaScrollViewer}" />
	<ControlTemplate x:Key="ListBoxTemplate" TargetType="{x:Type ListBox}">
		<Grid>
			<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{StaticResource BaseBrush}" CornerRadius="1" />
			<Border Margin="1" BorderThickness="0" BorderBrush="{StaticResource editBoxBorderBrush}" Background="{x:Null}" CornerRadius="1" />
			<Border Margin="1" BorderThickness="0"  BorderBrush="{StaticResource BorderBrush}" Background="{x:Null}" CornerRadius="1" />
			<Grid x:Name="FocusGrid" Opacity="0">
				<Border BorderBrush="{StaticResource editBoxFocus1Brush}" BorderThickness="0" Background="{x:Null}" CornerRadius="1" />
				<Border Margin="0" BorderBrush="Transparent" BorderThickness="0" Background="{x:Null}" CornerRadius="2" />
			</Grid>
			<ScrollViewer Margin="2" Style="{StaticResource MayaScrollViewer}" Focusable="False" Background="{x:Null}" BorderThickness="0">
				<StackPanel Margin="0" IsItemsHost="True" />
			</ScrollViewer>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter TargetName="FocusGrid" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsGrouping" Value="True">
				<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource ListBoxTemplate}" />
		<Setter Property="Background" Value="{StaticResource BaseBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<ControlTemplate x:Key="ListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
		<Grid SnapsToDevicePixels="True">
			<Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource listboxItemSelectedBrush}" />
			<ContentPresenter x:Name="contentPresenter" Margin="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter TargetName="SelectedRectangle" Property="Opacity" Value="1" />
				<Setter Property="Foreground" Value="White" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="True" />
					<Condition Property="IsEnabled" Value="False" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter TargetName="SelectedRectangle" Property="Opacity" Value="1" />
					<Setter TargetName="SelectedRectangle" Property="Fill" Value="{StaticResource listboxItemDisabledSelectedBrush}" />
					<Setter Property="Foreground" Value="White" />
				</MultiTrigger.Setters>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ListBoxItem}" d:IsControlPart="True" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource ListBoxItemTemplate}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
	</Style>

	<!-- ComboBox -->
	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid x:Name="Grid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border x:Name="BorderAndBackground" Grid.ColumnSpan="2" Width="Auto" Height="Auto" Background="{StaticResource ButtonBrush}" BorderBrush="{StaticResource Brush_Green}" BorderThickness="1" CornerRadius="0" />
			<Path x:Name="Arrow" Grid.Column="1" Width="15" Height="Auto" RenderOptions.EdgeMode="Aliased" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource Brush_Green}" Data="M 4 -1 L 8 3 L 12 -1 Z" />
			<Grid x:Name="MouseOverGrid" Grid.ColumnSpan="2" Opacity="0">
				<Border BorderThickness="0,1,0,1" Margin="0" BorderBrush="{StaticResource Brush_Green}" CornerRadius="0" />
				<Border BorderThickness="0,1,0,1" Margin="0" BorderBrush="{StaticResource Brush_Green}" CornerRadius="0" />
			</Grid>
			<Border Grid.Column="1" Width="15" Height="Auto" Opacity="0.5" Background="{x:Null}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1,0,0,0" CornerRadius="0" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="ToggleButton.IsChecked" Value="True">
				<Setter Property="Background" Value="{StaticResource ButtonPressedBrush}" />
				<Setter TargetName="Arrow" Property="RenderTransform">
					<Setter.Value>
						<TranslateTransform X="1" Y="1" />
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}" />
				<Setter TargetName="Arrow" Property="Stroke" Value="{StaticResource TextDisabledBrush}" />
				<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource ButtonDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
		<ControlTemplate.Triggers>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="Grid">
			<ToggleButton x:Name="ToggleButton" Grid.Column="2" Template="{StaticResource ComboBoxToggleButton}" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
			<ContentPresenter x:Name="ContentSite" Margin="3,3,23,3" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />
			<TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" Template="{StaticResource ComboBoxTextBox}" Style="{x:Null}" Margin="3,3,23,3" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" Background="{StaticResource BaseBrush}" IsReadOnly="{TemplateBinding IsReadOnly}" BorderBrush="{StaticResource BorderBrush}" Foreground="{StaticResource TextBrush}" />
			<Popup x:Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
				<Grid x:Name="DropDown" Margin="0,0,4,4" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True">
					<Border x:Name="DropDownBorder" BitmapEffect="{StaticResource DropDownShadow}" Background="{StaticResource BaseBrush}" BorderBrush="{StaticResource Brush_Green}" BorderThickness="1" CornerRadius="0" />
					<Border Margin="1" Background="{x:Null}" BorderBrush="{StaticResource WindowBrush}" BorderThickness="1" CornerRadius="3" />
					<ScrollViewer Margin="2" Style="{StaticResource MayaScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Foreground="{StaticResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}">
						<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
					</ScrollViewer>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="ItemsControl.HasItems" Value="False">
				<Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Brush_LightGray}" />
			</Trigger>
			<Trigger Property="ItemsControl.IsGrouping" Value="True">
				<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
			</Trigger>
			<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
				<Setter TargetName="DropDownBorder" Property="Margin" Value="0" />
			</Trigger>
			<Trigger Property="ComboBox.IsEditable" Value="True">
				<Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
				<Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
				<Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="Background" Value="{StaticResource ButtonBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource Brush_Green}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="20" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<ControlTemplate x:Key="ComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
		<Grid x:Name="Grid" Background="{TemplateBinding Background}">
			<Rectangle x:Name="HoverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource listboxItemSelectedBrush}" />
			<ContentPresenter x:Name="contentPresenter" Margin="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="White" />
				<Setter TargetName="HoverRectangle" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Brush_LightGray}" />
			</Trigger>
			<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
				<Setter Property="Foreground" Value="White" />
				<Setter TargetName="HoverRectangle" Property="Opacity" Value="1" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ComboBoxItem}" d:IsControlPart="True" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource ComboBoxItemTemplate}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="Background" Value="{StaticResource BaseBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>

	<!-- ProgressBar -->
	<ControlTemplate x:Key="ProgressBarTemplate" TargetType="{x:Type ProgressBar}">
		<Grid x:Name="GridRoot" SnapsToDevicePixels="True">
			<Border x:Name="PART_Track" Background="{StaticResource BaseBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="2" />
			<Border Margin="1" Background="{x:Null}" BorderBrush="{StaticResource ButtonColorBrush}" BorderThickness="1,1,0,0" CornerRadius="2" />
			<Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
				<Grid x:Name="Foreground">
					<Border x:Name="Indicator" Grid.ZIndex="96" Margin="2" Background="{StaticResource ProgressBarBrush}" BorderThickness="0,1,0,1" BorderBrush="{StaticResource checkBoxHoverTopLeft1Brush}" CornerRadius="2" />
					<Grid x:Name="Animation" ClipToBounds="True">
						<Border x:Name="PART_GlowRect" Margin="-40,0,0,0" Width="40" Background="{x:Null}" HorizontalAlignment="Left">
							<Border Margin="2" Background="{StaticResource ProgressBarBrush}" BorderThickness="0,1,0,1" BorderBrush="{StaticResource checkBoxHoverTopLeft1Brush}" CornerRadius="2" />
						</Border>
					</Grid>
				</Grid>
			</Decorator>
			<Border x:Name="BorderAndBackground" Grid.ZIndex="98" Opacity="0" Margin="1" Background="{StaticResource BaseBrush}" BorderBrush="{x:Null}" BorderThickness="0" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter TargetName="GridRoot" Property="LayoutTransform">
					<Setter.Value>
						<RotateTransform Angle="-90" />
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="BorderAndBackground" Property="Opacity" Value="0.37" />
			</Trigger>
			<Trigger Property="IsIndeterminate" Value="False">
				<Setter TargetName="PART_GlowRect" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsIndeterminate" Value="True">
				<Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource ProgressBarTemplate}" />
		<Setter Property="Height" Value="20" />
		<Setter Property="FontSize" Value="10" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>

	<!-- ContextMenu / MenuItem -->
	<ControlTemplate x:Key="ContextMenuTemplate" TargetType="{x:Type ContextMenu}">
		<Grid>
			<Border x:Name="Border"  Margin="0" BorderBrush="#D2D2D2" BorderThickness="1" />
			<StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Vertical" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource ContextMenuTemplate}" />
		<Setter Property="Background" Value="{StaticResource WindowBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type MenuItem}">
		<Grid x:Name="GridRoot">
			<Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
						<ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
						<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
						<ColumnDefinition x:Name="Col3" Width="14" />
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" Grid.Column="0" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
					<Grid x:Name="GlyphPanel" Grid.Column="0" Margin="4,0,6,0" VerticalAlignment="Center" Visibility="Hidden">
						<Border x:Name="CheckBox" Width="13" Height="13" BorderThickness="1" BorderBrush="{StaticResource DarkBrush}" Background="{StaticResource BorderBrush}" CornerRadius="1">
							<Path x:Name="CheckMark" RenderOptions.EdgeMode="Aliased" Width="11" Height="11" SnapsToDevicePixels="False" StrokeThickness="2" Stroke="{StaticResource TextBrush}" Data="">
								<Path.Clip>
									<RectangleGeometry Rect="1,1,9,9" />
								</Path.Clip>
							</Path>
						</Border>
					</Grid>
					<ContentPresenter x:Name="HeaderHost" Grid.Column="1" Margin="{TemplateBinding Padding}"  RecognizesAccessKey="True" ContentSource="Header" />
					<ContentPresenter x:Name="IGTHost" Grid.Column="2" Margin="8,1,8,1" ContentSource="InputGestureText" VerticalAlignment="Center" />
					<Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
						<Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 Z" />
					</Grid>
					<Popup x:Name="SubMenuPopup" Placement="Right" HorizontalOffset="0" Focusable="False" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{StaticResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True">
						<Grid Margin="0,0,4,4" SnapsToDevicePixels="True">
							<Border x:Name="SubMenuBorder" BitmapEffect="{StaticResource DropDownShadow}" BorderThickness="1" BorderBrush="{StaticResource BaseBrush}" Background="{StaticResource WindowBrush}" Margin="0">
								<Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0" />
								</Grid>
							</Border>
						</Grid>
					</Popup>
				</Grid>
			</Border>
			<Border x:Name="BorderTopLeft" Visibility="Collapsed" Margin="1" BorderThickness="1,1,0,0" BorderBrush="{StaticResource ButtonColorBrush}" />
			<Border x:Name="BorderBottomRight" Visibility="Collapsed" Margin="1" BorderThickness="0,0,1,1" BorderBrush="{StaticResource scrollbarStopColorBrush}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Margin" Value="0,0,3,0" />
				<Setter Property="Padding" Value="4,1,4,1" />
				<Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
				<Setter TargetName="SubMenuPopup" Property="HorizontalOffset" Value="-1" />
				<Setter TargetName="SubMenuPopup" Property="VerticalOffset" Value="1" />
				<Setter TargetName="Col0" Property="MinWidth" Value="0" />
				<Setter TargetName="Col3" Property="Width" Value="Auto" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Padding" Value="4,1,4,1" />
				<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="DockPanel.Dock" Value="Top" />
				<Setter Property="Padding" Value="0,2,0,2" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="DockPanel.Dock" Value="Top" />
				<Setter Property="Padding" Value="0,2,0,2" />
				<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsCheckable" Value="True">
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="CheckMark" Property="Data" Value="M 0 5 L 4 9 M 4 8 L 12 0" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True" />
					<Condition Property="Role" Value="TopLevelHeader" />
				</MultiTrigger.Conditions>
				<Setter TargetName="GridRoot" Property="Background" Value="{StaticResource Brush_DarkGreen}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True" />
					<Condition Property="Role" Value="SubmenuHeader" />
				</MultiTrigger.Conditions>
				<Setter TargetName="Border" Property="Background" Value="{StaticResource listboxItemSelectedBrush}" />
				<Setter Property="Foreground" Value="White" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True" />
					<Condition Property="Role" Value="SubmenuItem" />
				</MultiTrigger.Conditions>
				<Setter TargetName="Border" Property="Background" Value="{StaticResource listboxItemSelectedBrush}" />
				<Setter Property="Foreground" Value="White" />
			</MultiTrigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{StaticResource MenuItemTemplate}" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>

	<!-- TabItem -->
	<ControlTemplate x:Key="TabItemTemplate" TargetType="{x:Type TabItem}">
		<Grid x:Name="GridRoot" Height="{TemplateBinding Height}">
			<Grid.LayoutTransform>
				<TransformGroup>
					<ScaleTransform ScaleX="1" ScaleY="1" />
					<SkewTransform AngleX="0" AngleY="0" />
					<RotateTransform Angle="0" />
					<TranslateTransform X="0" Y="0" />
				</TransformGroup>
			</Grid.LayoutTransform>
			<Border x:Name="Border" BorderThickness="1,1,1,0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2,2,0,0" />
			<Border x:Name="BorderTop" Margin="1,4,1,0" Opacity="0" BorderThickness="0,1,0,0" BorderBrush="{StaticResource TabItemTopBorderBrush}" CornerRadius="0" />
			<Border x:Name="BorderTopLeft" Margin="0,1,0,0" Opacity="0" BorderThickness="1,1,0,0" BorderBrush="{StaticResource scrollbarStopColorBrush}" CornerRadius="2,2,0,0" />
			<Border x:Name="BorderRight" Margin="0" Opacity="0" BorderThickness="0,0,1,0" BorderBrush="{StaticResource radioBoxBorder1Brush}" CornerRadius="2,2,0,0" />
		</Grid>
	</ControlTemplate>
	<Style TargetType="{x:Type TabItem}" d:IsControlPart="True" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Background" Value="White" />
		<Setter Property="BorderBrush" Value="White" />
		<Setter Property="Height" Value="22" />
		<Setter Property="Width" Value="Auto" />
	</Style>

	<!-- ScrollBar -->
	<Style x:Key="VerticalScrollBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="BorderBrush" Value="{StaticResource Brush_Green}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid SnapsToDevicePixels="True">
						<Rectangle x:Name="Ellipse" StrokeThickness="1" Stroke="{StaticResource Brush_Green}" Fill="{StaticResource Brush_Green}" />
						<Border x:Name="Border1" Margin="0" BorderThickness="1,1,0,0" BorderBrush="{StaticResource Brush_Green}" Background="{x:Null}" />
						<Border x:Name="Border2" Margin="0" BorderThickness="0,0,1,1" BorderBrush="{StaticResource Brush_Green}" Background="{x:Null}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDragging" Value="True">
							<Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource Brush_LightGreen}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_LightGreen}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_LightGreen}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource Brush_LightGray}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_LightGray}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_LightGray}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HorizontalScrollBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="BorderBrush" Value="{StaticResource Brush_Green}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid SnapsToDevicePixels="True">
						<Rectangle x:Name="Ellipse" StrokeThickness="1" Stroke="{StaticResource Brush_Green}" Fill="{StaticResource Brush_Green}" />
						<Border x:Name="Border1" Margin="0" BorderThickness="1,1,0,0" BorderBrush="{StaticResource Brush_Green}" Background="{x:Null}" />
						<Border x:Name="Border2" Margin="0" BorderThickness="0,0,1,1" BorderBrush="{StaticResource Brush_Green}" Background="{x:Null}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDragging" Value="True">
							<Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource Brush_LightGreen}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_LightGreen}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_LightGreen}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource Brush_LightGray}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_LightGray}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_LightGray}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonUpStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Height="16" SnapsToDevicePixels="True">
						<Border x:Name="BorderAndBackground" BorderThickness="1" BorderBrush="{StaticResource Brush_LightGray}" Background="{StaticResource Brush_LightGray}" CornerRadius="0" />
						<Border x:Name="Border1" Margin="0" BorderThickness="1,1,0,0" BorderBrush="{StaticResource Brush_LightGray}" Background="{x:Null}" CornerRadius="0" />
						<Border x:Name="Border2" Margin="0" BorderThickness="0,0,1,1" BorderBrush="{StaticResource Brush_LightGray}" Background="{x:Null}" CornerRadius="0" />
						<Path x:Name="Path" Stretch="None" RenderOptions.EdgeMode="Aliased" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource Brush_Green}" Data="M 0 2 L 4 -2 L 8 2 Z" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Path" Property="Fill" Value="{StaticResource Brush_White}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource Brush_Green}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_Green}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_Green}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Path" Property="Fill" Value="{StaticResource Brush_LightGray}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource Brush_White}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_White}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_White}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonDownStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Height="16" SnapsToDevicePixels="True">
						<Border x:Name="BorderAndBackground" BorderThickness="1" BorderBrush="{StaticResource Brush_LightGray}" Background="{StaticResource Brush_LightGray}" CornerRadius="0" />
						<Border x:Name="Border1" Margin="0" BorderThickness="1,1,0,0" BorderBrush="{StaticResource Brush_LightGray}" Background="{x:Null}" CornerRadius="0" />
						<Border x:Name="Border2" Margin="0" BorderThickness="0,0,1,1" BorderBrush="{StaticResource Brush_LightGray}" Background="{x:Null}" CornerRadius="0" />
						<Path x:Name="Path" Stretch="None" RenderOptions.EdgeMode="Aliased" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource Brush_Green}" Data="M 0 -2 L 4 2 L 8 -2 Z" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Path" Property="Fill" Value="{StaticResource Brush_White}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource Brush_Green}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_Green}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_Green}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Path" Property="Fill" Value="{StaticResource Brush_LightGray}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource Brush_White}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_White}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_White}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonLeftStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Height="16" SnapsToDevicePixels="True">
						<Border x:Name="BorderAndBackground" BorderThickness="1" BorderBrush="{StaticResource Brush_LightGray}" Background="{StaticResource Brush_LightGray}" CornerRadius="0" />
						<Border x:Name="Border1" Margin="0" BorderThickness="1,1,0,0" BorderBrush="{StaticResource Brush_LightGray}" Background="{x:Null}" CornerRadius="0" />
						<Border x:Name="Border2" Margin="0" BorderThickness="0,0,1,1" BorderBrush="{StaticResource Brush_LightGray}" Background="{x:Null}" CornerRadius="0" />
						<Path x:Name="Path" Stretch="None" RenderOptions.EdgeMode="Aliased" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource Brush_Green}" Data="M 2 -1 L -2 2 L 2 6 Z" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Path" Property="Fill" Value="{StaticResource Brush_White}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource Brush_Green}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_Green}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_Green}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Path" Property="Fill" Value="{StaticResource Brush_LightGray}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource Brush_White}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_White}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_White}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonRightStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Height="16" SnapsToDevicePixels="True">
						<Border x:Name="BorderAndBackground" BorderThickness="1" BorderBrush="{StaticResource Brush_LightGray}" Background="{StaticResource Brush_LightGray}" CornerRadius="0" />
						<Border x:Name="Border1" Margin="0" BorderThickness="1,1,0,0" BorderBrush="{StaticResource Brush_LightGray}" Background="{x:Null}" CornerRadius="0" />
						<Border x:Name="Border2" Margin="0" BorderThickness="0,0,1,1" BorderBrush="{StaticResource Brush_LightGray}" Background="{x:Null}" CornerRadius="0" />
						<Path x:Name="Path" Stretch="None" RenderOptions.EdgeMode="Aliased" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource Brush_Green}" Data="M -2 -2 L 2 3 L -2 6 Z" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Path" Property="Fill" Value="{StaticResource Brush_White}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource Brush_Green}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_Green}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_Green}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Path" Property="Fill" Value="{StaticResource Brush_LightGray}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{StaticResource Brush_White}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{StaticResource Brush_White}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{StaticResource Brush_White}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid Background="{StaticResource Brush_LightGray}">
			<Grid.RowDefinitions>
				<RowDefinition MaxHeight="16" />
				<RowDefinition Height="*" />
				<RowDefinition MaxHeight="16" />
				<RowDefinition MaxHeight="16" />
			</Grid.RowDefinitions>
			<RepeatButton Grid.Row="0" Style="{StaticResource LineButtonUpStyle}" Command="ScrollBar.LineUpCommand" />
			<Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True" ViewportSize="NaN">
				<Track.Thumb>
					<Thumb MinHeight="26" Style="{StaticResource VerticalScrollBarThumbStyle}" />
				</Track.Thumb>
			</Track>
			<RepeatButton Grid.Row="2" Style="{StaticResource LineButtonUpStyle}" Command="ScrollBar.LineUpCommand" />
			<RepeatButton Grid.Row="3" Style="{StaticResource LineButtonDownStyle}" Command="ScrollBar.LineDownCommand" />
		</Grid>
	</ControlTemplate>
	<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid Background="{StaticResource Brush_LightGray}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition MaxWidth="16"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition MaxWidth="16"></ColumnDefinition>
				<ColumnDefinition MaxWidth="16"></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<RepeatButton Grid.Column="0" Style="{StaticResource LineButtonLeftStyle}" Command="ScrollBar.LineLeftCommand" />
			<Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False" ViewportSize="NaN">
				<Track.Thumb>
					<Thumb MinWidth="26" Style="{StaticResource HorizontalScrollBarThumbStyle}" />
				</Track.Thumb>
			</Track>
			<RepeatButton Grid.Column="2" Style="{StaticResource LineButtonLeftStyle}" Command="ScrollBar.LineLeftCommand" />
			<RepeatButton Grid.Column="3" Style="{StaticResource LineButtonRightStyle}" Command="ScrollBar.LineRightCommand" />
		</Grid>
	</ControlTemplate>
	<Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="16" />
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
			</Trigger>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="Height" Value="16" />
				<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
